<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blog.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.blog.model.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="user_profile_id" property="userProfileId" jdbcType="INTEGER" />
    <result column="user_snapshot_id" property="userSnapshotId" jdbcType="INTEGER" />
    <result column="email_verify_code" property="emailVerifyCode" jdbcType="VARCHAR" />
    <result column="email_verified" property="emailVerified" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, email, password, user_profile_id, user_snapshot_id, email_verify_code, email_verified, 
    create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.blog.model.User" >
    insert into user (id, email, password, 
      user_profile_id, user_snapshot_id, email_verify_code, 
      email_verified, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{userProfileId,jdbcType=INTEGER}, #{userSnapshotId,jdbcType=INTEGER}, #{emailVerifyCode,jdbcType=VARCHAR}, 
      #{emailVerified,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blog.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="userProfileId != null" >
        user_profile_id,
      </if>
      <if test="userSnapshotId != null" >
        user_snapshot_id,
      </if>
      <if test="emailVerifyCode != null" >
        email_verify_code,
      </if>
      <if test="emailVerified != null" >
        email_verified,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userProfileId != null" >
        #{userProfileId,jdbcType=INTEGER},
      </if>
      <if test="userSnapshotId != null" >
        #{userSnapshotId,jdbcType=INTEGER},
      </if>
      <if test="emailVerifyCode != null" >
        #{emailVerifyCode,jdbcType=VARCHAR},
      </if>
      <if test="emailVerified != null" >
        #{emailVerified,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.model.User" >
    update user
    <set >
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userProfileId != null" >
        user_profile_id = #{userProfileId,jdbcType=INTEGER},
      </if>
      <if test="userSnapshotId != null" >
        user_snapshot_id = #{userSnapshotId,jdbcType=INTEGER},
      </if>
      <if test="emailVerifyCode != null" >
        email_verify_code = #{emailVerifyCode,jdbcType=VARCHAR},
      </if>
      <if test="emailVerified != null" >
        email_verified = #{emailVerified,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.model.User" >
    update user
    set email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_profile_id = #{userProfileId,jdbcType=INTEGER},
      user_snapshot_id = #{userSnapshotId,jdbcType=INTEGER},
      email_verify_code = #{emailVerifyCode,jdbcType=VARCHAR},
      email_verified = #{emailVerified,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>